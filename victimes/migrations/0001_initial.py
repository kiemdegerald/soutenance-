# Generated by Django 5.1.1 on 2025-08-13 16:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Famille",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nom_famille",
                    models.CharField(max_length=100, verbose_name="Nom de famille"),
                ),
                (
                    "type_famille",
                    models.CharField(
                        choices=[
                            ("nucleaire", "Nucléaire"),
                            ("elargie", "Élargie"),
                            ("monoparentale", "Monoparentale"),
                            ("recomposee", "Recomposée"),
                        ],
                        default="nucleaire",
                        max_length=20,
                        verbose_name="Type de famille",
                    ),
                ),
                (
                    "adresse",
                    models.TextField(blank=True, verbose_name="Adresse complète"),
                ),
                (
                    "ville",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Téléphone"
                    ),
                ),
                (
                    "situation_economique",
                    models.CharField(
                        choices=[
                            ("stable", "Stable"),
                            ("precaire", "Précaire"),
                            ("difficile", "Difficile"),
                            ("aisee", "Aisée"),
                        ],
                        default="stable",
                        max_length=20,
                        verbose_name="Situation économique",
                    ),
                ),
                (
                    "informations_complementaires",
                    models.TextField(
                        blank=True, verbose_name="Informations complémentaires"
                    ),
                ),
                (
                    "nombre_personnes",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Nombre de personnes"
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("agent", "Agent Gendarmerie"),
                            ("assistant", "Assistant Social"),
                            ("responsable", "Responsable"),
                            ("admin", "Administrateur"),
                        ],
                        default="agent",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="DemandeAide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_demande",
                    models.CharField(
                        choices=[
                            ("scolaire", "Aide scolaire"),
                            ("allocation", "Allocation"),
                            ("logement", "Logement"),
                            ("autre", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("planifiee", "Planifiée"),
                            ("soumise", "Soumise"),
                            ("validee", "Validée"),
                            ("refusee", "Refusée"),
                        ],
                        default="planifiee",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_validation", models.DateTimeField(blank=True, null=True)),
                (
                    "cree_par",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="demandes_creees",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "valide_par",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="demandes_validees",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "famille",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demandes",
                        to="victimes.famille",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FicheVictime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=100, verbose_name="Nom")),
                ("prenom", models.CharField(max_length=100, verbose_name="Prénom")),
                (
                    "date_naissance",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "sexe",
                    models.CharField(
                        choices=[("M", "Masculin"), ("F", "Féminin")],
                        default="M",
                        max_length=1,
                        verbose_name="Sexe",
                    ),
                ),
                (
                    "nationalite",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nationalité"
                    ),
                ),
                (
                    "statut_civil",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("celibataire", "Célibataire"),
                            ("marie", "Marié(e)"),
                            ("divorce", "Divorcé(e)"),
                            ("veuf", "Veuf/Veuve"),
                            ("union_libre", "Union libre"),
                        ],
                        max_length=20,
                        verbose_name="Statut civil",
                    ),
                ),
                (
                    "profession",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Profession"
                    ),
                ),
                ("adresse", models.TextField(blank=True, verbose_name="Adresse")),
                (
                    "telephone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Téléphone"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "grade",
                    models.CharField(blank=True, max_length=100, verbose_name="Grade"),
                ),
                (
                    "date_deces",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de décès"
                    ),
                ),
                (
                    "lieu_deces",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Lieu de décès"
                    ),
                ),
                (
                    "acte_deces",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="actes_deces/",
                        verbose_name="Acte de décès",
                    ),
                ),
                (
                    "type_incident",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Type d'incident"
                    ),
                ),
                (
                    "description_incident",
                    models.TextField(
                        blank=True, verbose_name="Description de l'incident"
                    ),
                ),
                (
                    "date_incident",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de l'incident"
                    ),
                ),
                (
                    "lieu_incident",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Lieu de l'incident"
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                (
                    "cree_par",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "famille",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="victimes",
                        to="victimes.famille",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JournalAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=255)),
                ("date_action", models.DateTimeField(auto_now_add=True)),
                ("details", models.TextField(blank=True)),
                (
                    "utilisateur",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MembreFamille",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=100, verbose_name="Nom")),
                ("prenom", models.CharField(max_length=100, verbose_name="Prénom")),
                (
                    "date_naissance",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                (
                    "sexe",
                    models.CharField(
                        choices=[("M", "Masculin"), ("F", "Féminin")],
                        default="M",
                        max_length=1,
                        verbose_name="Sexe",
                    ),
                ),
                (
                    "relation_victime",
                    models.CharField(
                        choices=[
                            ("parent", "Parent"),
                            ("enfant", "Enfant"),
                            ("conjoint", "Conjoint/Conjointe"),
                            ("frere_soeur", "Frère/Sœur"),
                            ("grand_parent", "Grand-parent"),
                            ("petit_enfant", "Petit-enfant"),
                            ("oncle_tante", "Oncle/Tante"),
                            ("cousin", "Cousin/Cousine"),
                            ("autre", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Relation avec la victime",
                    ),
                ),
                (
                    "profession",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Profession"
                    ),
                ),
                (
                    "telephone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Téléphone"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "informations_complementaires",
                    models.TextField(
                        blank=True, verbose_name="Informations complémentaires"
                    ),
                ),
                (
                    "lien_parente",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        verbose_name="Lien de parenté (ancien)",
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                (
                    "famille",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membres",
                        to="victimes.famille",
                    ),
                ),
            ],
        ),
    ]
